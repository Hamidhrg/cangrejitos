# This script may be run from the command line by typing
# rb make_anc_state.Rev

# NOTE: modify out_str to use with other analyses!
out_str = "output/Simple"
#out_str = "output/epoch"
#out_str = "output/simple_phy"
#out_str = "output/epoch_phy"

out_state_fn = out_str + ".states.log"
out_phy_fn   = out_str + ".tre"
out_mcc_fn   = out_str + ".mcc.tre"

# compute MCC tree for "reference tree"
tree_trace = readTreeTrace(file=out_phy_fn, treetype="clock")
tree_trace.setBurnin(0.25)
mcc_tree = mccTree(tree_trace, file=out_mcc_fn, mean=false)
##The original script looks for "out_phy_fn".trees, so I copied the .tre file and added a .trees to it...

# get ancestral state trace
state_trace = readAncestralStateTrace(file=out_state_fn)

# get ancestral state tree trace
state_tree_trace = readAncestralStateTreeTrace(file=out_phy_fn, treetype="clock")

# compute burnin
n_burn = floor(0.25 * state_tree_trace.getNumberSamples())

# compute ancestral state tree
anc_tree = ancestralStateTree(tree=mcc_tree,
                              ancestral_state_trace_vector=state_trace,
                              tree_trace=state_tree_trace,
                              include_start_states=true,
                              file=out_str+".ase.tre",
                              burnin=n_burn,
                              summary_statistic="MAP",
                              site=1)

# exit RevBayes
quit()
                             
